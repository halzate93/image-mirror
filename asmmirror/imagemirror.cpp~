#include <stdio.h>
#include <cv.h>

typedef struct image{
  int rows;
  int columns;
  char * data;
}image;

struct image* initImage(char* data, int rows, int columns){
  struct image* instance = malloc(sizeof(image*));
  instance->rows = rows;
  instance->columns = columns;
  instance->data = data;

  return instance;
}

extern "C" struct image* loadImage(char* path){
  Mat img = imread(path, 1);
  return initImage(img.data, img.rows, img.cols);
}

extern "C" void saveImage(char* image, int rows, int cols, char* path){
  Mat img = Mat(rows, cols, image, AUTO_STEP);
  vector<int> compression_params;
  compression_params.push_back(CV_IMWRITE_PNG_COMPRESSION);
  compression_params.push_back(9);
  imwrite("generated.jpg", img, compression_params);
}
